@using VacationPlannerPro.Business.DTOs.LeaderDTOs
@model CreateLeaderDTO

@{
    ViewBag.Title = "Create Leader";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-lg-6">
        <div class="card shadow border-0 rounded-lg mt-3">
            <div class="card-header bg-primary text-white">
                <h3 class="text-center text-uppercase font-weight-light my-4">Create Leader</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Create", "Leaders", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <label for="ProfessionDropdown" class="form-label">Profession</label>
                        <select id="ProfessionDropdown" name="ProfessionId" class="form-select">
                            <option value="" disabled selected>Select a Profession</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.ProfessionId, "", new { @class = "text-danger" })
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <a href="@Url.Action("Index", "Leaders", new { area = "Admin" })" class="btn btn-outline-primary">
                            <i class="fa-solid fa-chevron-left"></i> Back to List
                        </a>
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        populateDropdown(
            '@Url.Action("GetAllProfessions", "Professions", new { area = "Admin" })',
            'ProfessionDropdown',
            'Select a Profession'
        );
    </script>
}
