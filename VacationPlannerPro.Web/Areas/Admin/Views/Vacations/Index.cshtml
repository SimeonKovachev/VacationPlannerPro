@using VacationPlannerPro.Business.DTOs
@model PaginatedListDTO<VacationPlannerPro.Business.DTOs.VacationDTOs.VacationDTO>

@{
    ViewBag.Title = "Vacations Management";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center mt-3">Vacations Management</h2>

<div class="mt-3">
    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-table me-1"></i> Vacation List</h5>
                <a href="@Url.Action("Create", "Vacations", new { area = "Admin" })" class="btn btn-success">
                    <i class="fa-solid fa-plus"></i> Create New Vacation
                </a>
            </div>
        </div>
        <div class="card-body">
            <!-- Search Bar -->
            <form method="get" action="@Url.Action("Index", "Vacations", new { area = "Admin" })" class="mb-4">
                <div class="input-group">
                    <input type="text"
                           class="form-control"
                           name="searchTerm"
                           value="@ViewBag.SearchTerm"
                           placeholder="Search by Worker Name"
                           id="searchInput">
                    <button class="btn btn-outline-secondary" type="submit">
                        <i class="fa-solid fa-search"></i> Search
                    </button>
                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <button type="button"
                                class="btn btn-outline-secondary"
                                onclick="clearSearch()">
                            <i class="fa-solid fa-times"></i>
                        </button>
                    }
                </div>
            </form>

            <table class="table table-striped table-hover">
                <thead class="table-primary">
                    <tr>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Vacation Type</th>
                        <th>Worker</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vacation in Model.Items)
                    {
                        <tr>
                            <td>@vacation.StartDate.ToShortDateString()</td>
                            <td>@vacation.EndDate.ToShortDateString()</td>
                            <td>
                                @{
                                    var vacationTypeName = VacationPlannerPro.Web.Helpers.EnumExtensions.GetEnumDisplayName(vacation.Type);
                                    @vacationTypeName
                                }
                            </td>
                            <td>@vacation.WorkerName</td>
                            <td>
                                <a href="@Url.Action("Edit", "Vacations", new { id = vacation.Id, area = "Admin" })" class="btn btn-warning btn-sm">
                                    <i class="fa-solid fa-edit"></i> Edit
                                </a>
                                <a href="@Url.Action("Delete", "Vacations", new { id = vacation.Id, area = "Admin" })" class="btn btn-outline-danger btn-sm">
                                    <i class="fa-solid fa-trash"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <div class="d-flex justify-content-center">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link @(Model.CurrentPage == 1 ? "disabled" : "")"
                           href="@(Model.CurrentPage > 1 ? Url.Action("Index", "Vacations", new { area = "Admin", page = Model.CurrentPage - 1, searchTerm = ViewBag.SearchTerm }) : "#")">
                            Previous
                        </a>
                    </li>
                    @for (var i = 1; i <= (Model.TotalCount + Model.PageSize - 1) / Model.PageSize; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", "Vacations", new { area = "Admin", page = i, searchTerm = ViewBag.SearchTerm })">
                                @i
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.CurrentPage >= (Model.TotalCount + Model.PageSize - 1) / Model.PageSize ? "disabled" : "")">
                        <a class="page-link @(Model.CurrentPage >= (Model.TotalCount + Model.PageSize - 1) / Model.PageSize ? "disabled" : "")"
                           href="@(Model.CurrentPage < (Model.TotalCount + Model.PageSize - 1) / Model.PageSize ? Url.Action("Index", "Vacations", new { area = "Admin", page = Model.CurrentPage + 1, searchTerm = ViewBag.SearchTerm }) : "#")">
                            Next
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>